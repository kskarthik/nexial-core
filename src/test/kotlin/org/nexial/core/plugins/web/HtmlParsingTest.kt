/* * Copyright 2012-2022 the original author or authors. * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * 	http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. * */@file:Suppress("invisible_reference", "invisible_member")package org.nexial.core.plugins.webimport org.apache.commons.lang3.StringUtilsimport org.junit.Assert.assertTrueimport org.junit.Testimport org.nexial.commons.utils.ResourceUtilsimport org.nexial.core.utils.JsonUtilsimport kotlin.test.assertEqualsclass HtmlParsingTest {    @Test    @Throws(Exception::class)    fun parseHtmlWithLinks() {        val fixturePath = "fixture1.html"        val fixtureContent = ResourceUtils.loadResource("org/nexial/core/plugins/web/${fixturePath}")        val subject = Mailinator()        val labels = subject.extractLinkLabels(fixtureContent)        println(labels)                assertEquals(1, labels.size)        assertEquals("Activate Account", labels[0])    }    @Test    @Throws(Exception::class)    fun parseMailinatorJson() {        val fixturePath = "fixture2.json"        val fixtureContent = ResourceUtils.loadResource("org/nexial/core/plugins/web/${fixturePath}")        val fixtureJson = JsonUtils.toJSONObject(fixtureContent)        val subject = Mailinator()        val email = subject.toEmailDetails(fixtureJson)        // println(email)        assertEquals("patrick_and_kitty-1653859525-13288368", email.id)        assertEquals("Agile Testing", email.subject)        assertEquals("Jimmy Bucket", email.from)        assertEquals("patrick_and_kitty@mailinator.com", email.to)        assertEquals("2022-05-29T14:25:25", email.time.toString())        assertTrue(StringUtils.contains(email.content, "guaranteed to be secure or error-free, as information can be"))        assertTrue(StringUtils.contains(email.html,                                        "<a href=\"https://www.mailinator.com/linker?linkid=ca8de7fd-6862-4821-ae2c-04dd9f13d446\" target=\"_blank\" style=\"box-sizing:inherit;background-color:transparent;color:rgb(47,109,181);line-height:inherit;text-decoration-line:none\">Exploratory Testing</a>"))        assertTrue(email.link.isNotEmpty())        assertEquals(7, email.link.size)        assertTrue(email.link.containsKey("DevOps"))        assertTrue(email.link.containsKey("continuous testing"))        assertTrue(email.link.containsKey("testing needs to happen early"))        assertTrue(email.link.containsKey("automated testing"))        assertTrue(email.link.containsKey("Get the white paper >>"))        assertTrue(email.link.containsKey("Test-Driven Development (TDD)"))        assertTrue(email.link.containsKey("Exploratory Testing"))        assertTrue(email.links.isNotEmpty())        assertEquals(7, email.links.size)    }}