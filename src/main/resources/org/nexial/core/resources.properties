#
# Copyright 2012-2021 the original author or authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# 	http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#

nexial.baseUrl=https://nexiality.github.io/documentation

Abort.remainingScenariosSkipped=- subsequent test scenarios will be skipped
Abort.exec.stop=- test execution will stop now.
Abort.step.failFast=[ABORT] due to execution failure and fail-fast in effect
Abort.activity.failFast=[ABORT] skipping test activity due to previous failure
Abort.activity.failEnd=[ABORT] skipping test activity due to previous end
Abort.activity.failLoop=[ABORT] skipping test activity due to break-loop in effect
Abort.activity.endIf=[ABORT] activity ending due to EndIf() flow control activated.
Abort.activity.endLoopIf=[ABORT] activity ending due to EndLoopIf() flow control activated or unrecoverable execution \
  failure.
Abort.scenario.failFast=[ABORT] scenario failed and fail-fast is in effect {remainingScenariosSkipped}
Abort.scenario.failImmediate=[ABORT] scenario failed and fail-immediate is in effect {remainingScenariosSkipped}
Abort.scenario.endIf=[ABORT] scenario ended due to EndIf() flow control
Abort.scenario.endLoopIf=[ABORT] scenario ended due to EndLoopIf() flow control
Abort.script.endIf=[ABORT] {0} script execution ended due to end immediate in effect
Abort.exec.failFast=[ABORT] failure found and fail-fast is in effect {exec.stop}
Abort.exec.failImmediate=[ABORT] fail-immediate in effect {exec.stop}
Abort.exec.endIf=[ABORT] EndIf() flow control activated {exec.stop}
Abort.exec.endLoopIf=[ABORT] EndLoopIf() flow control activated - current iteration will stop now.
Abort.criticalCommand.fail=[ABORT] due to failure on fail-fast command: {0}
Abort.exceedFailAfter=[ABORT] execution fail count ({0}) exceeds fail-after limit ({1}); setting fail-immediate to true
Abort.dupProjectProperties=[ABORT] Duplicate data variable found in {0} is NOT ALLOWED: {1}

Commons.noAutoOpenResult=SKIPPING auto-open-result since Nexial is currently running in non-interactive environment
Commons.otcNotReady=Unable to save {0} to cloud storage since Nexial Cloud Integration is not properly configured. See \
  {$nexial.baseUrl}/systemvars/index.html#nexial.outputToCloud for more details.
Commons.screenshot.cancelled=cancelled taking screenshot; agent/driver not ready.
Commons.dupProjectProperties.first=Duplicate data variable found in {0} is IGNORED: {1}
Commons.dupProjectProperties.last=Duplicate data variable found in {0} is OVERRIDDEN: {1}

Fatal.checkSupport=Check with Nexial Support Group for details.
Fatal.command.missing=command type '{0}' is not available. {checkSupport}
Fatal.env.missing=NEXIAL_LIB and NEXIAL_HOME environment variables are missing. {checkSupport}
Fatal.cmdMeta.missing=Unable to retrieve command variable metadata. {MSG_checkSupport}
Fatal.cmdMeta.scriptUpdateErr=ERROR: Failed to update scripts due to command metadata missing; {checkSupport}
Fatal.activity.bad={0} Found invalid, space-only activity name. {checkSupport}
Fatal.activity.missing={0} Invalid format; First row must contain valid activity name. {checkSupport}
Fatal.activity.dup={0} Found duplicate activity name '{1}'
Fatal.problematicName={0} leading/trailing non-printable characters (whitespaces, tabs or newlines) found in {1} \
  name '{2}' will likely cause execution-time issue.
Fatal.invalidProjectId=\
\n\n\
-------------------------------------------------------------------------------\n\
!!!!! ERROR !!!!!\n\
The file {0} contains INCORRECT project id:\n\
\t{1}\n\n\
Please fix this issue by:\n\
1. Run the 'nexial-project' batch:\n\
   cd {2}\n\
   {3} {4}\n\n\
2. Update {0} with the appropriate project ID.\n\
   Project ID should be a single word, without spaces.\n\n\
Nexial execution will stop now.\n\n\
-------------------------------------------------------------------------------\n\n

Console.inspectPrompt=\
[--------------------------------------------------------------------------------------------------]\n\
|                                         INSPECT ON PAUSE                                         |\n\
[--------------------------------------------------------------------------------------------------]\n\
> Enter statement to inspect. Supports data variables, Nexial functions, and Nexial expressions.\n\
  > Press ENTER or :resume to resume execution\n\
  > Press :end to end execution\n\
> \n\
inspect-> 
Console.continuePrompt=\t>>> Press ENTER to continue... 

Mailer.notReady.docRef=Please check {$nexial.baseUrl}/tipsandtricks/IntegratingNexialWithEmail.html for more details.
Mailer.notReady.jndi=nexial mailer not enabled: missing required JNDI configurations. {notReady.docRef}
Mailer.notReady.smtp=nexial mailer not enabled: missing required smtp/imap configurations. {notReady.docRef}
Mailer.notReady.ses=nexial mailer not enabled: missing required AWS SES configurations. {notReady.docRef}
Mailer.notReady.mail=nexial mailer not enabled: unable to resolve any valid mailer configurations. {notReady.docRef}
Mailer.notReady.disabled=nexial mailer not enabled: nexial.enableEmail=false
Mailer.notReady.mailToUndefined=nexial mailer not enabled: nexial.mailTo=<empty>

Mobile.noService=No mobile driver available at this time. Please be sure to invoke use(profile) command prior to \
  other mobile commands. See {$nexial.baseUrl}/commands/mobile/use(profile) for details
Mobile.missing.profile=No configuration found for profile '{0}'
Mobile.missing.type=Missing configuration 'type' in profile '{0}'
Mobile.missing.config=Missing configuration: {0}
Mobile.invalid.locator=Invalid locator: {0}
Mobile.invalid.locator.ios=This locator is only supported on iOS device: {0}
Mobile.invalid.locator.android=This locator is only support on Android device: {0}
Mobile.bad.nearby=Invalid nearby locator '{0}'
Mobile.invalid.nearby=Invalid nearby locator '{0}' - Invalid format
Mobile.invalid.index=Invalid index: {0}
Mobile.invalid.index.value=Option index must be greater than zero: {0}
Mobile.invalid.length=Invalid number specified as length
Mobile.invalid.locator.oneOf=Invalid locator specified. The one-of locator must be in the form of one-of={...}{...}.\
  \ Found: {0}
Mobile.misfit.locator.oneOf=Invalid locator specified. Either no locators found or none was fitting the target \
  mobile platform: {0}
Mobile.mismatch.locator.oneOf=Unable to find an element matching to any of the locators specified in {0}
Mobile.error.closeApp=Unable to close app: {0}
Mobile.error.shutdown=Unable to shut down mobile driver: {0}
Mobile.appium.started=Appium server started on {0}
Mobile.missing.appium.path=Unable to resolve an appropriate path for Appium server (main.js) because required \
  environment variable is not defined: {0}
Mobile.invalid.appium.path=Appium path did not resolve to a valid executable for Appium server (main.js): {0}
Mobile.missing.node.path=Unable to resolve an appropriate path for NodeJS (to run Appium server) because required \
  environment variable is not defined: {0}
Mobile.invalid.node.path=Node path did not resolve to a valid executable NodeJS executable: {0}
Mobile.missing.app=Configured app is currently not installed on device: {0}
Mobile.script.notExecutable={0} is not found or is not executable. Unable to proceed
Mobile.ext.notSupported=File extension not supported for iOS file transfer: {0}

BrowserStack.required=Required for BrowserStack Integration.
BrowserStack.missing.config=Missing configuration '{1}' for profile '{0}'; {$BrowserStack.required}
BrowserStack.missing.app=Missing configuration 'app' for profile '{0}'; {$BrowserStack.required}
BrowserStack.missing.appId=Missing configuration 'appId' for profile '{0}'; {$BrowserStack.required}
BrowserStack.invalid.app=Configuration 'app' for profile '{0}' does not resolve to a valid app; {$BrowserStack.required}
BrowserStack.upload.app.fail=Unable to upload app '{0}' to BrowserStack: {1}
BrowserStack.upload.app.success=Successfully uploaded app '{0}' to BrowserStack. The new appId is\n\t{1}\n\
  Set this to {2} to reuse this app instance for future automation.
BrowserStack.missing.appOrAppId=Missing configuration 'appId' or 'app' for profile '{0}' - one of them is needed; \
  {$BrowserStack.required}
BrowserStack.list.app.fail=Unable to list recently uploaded apps for profile {0} in BrowserStack: {1}
BrowserStack.delete.app.fail=Unable to delete app {1} for profile {0} in BrowserStack: {2}
BrowserStack.update.status.fail=Unable to update status to BrowserStack session {0}: {1}
BrowserStack.list.browsers.fail=Unable to list supported browsers for profile {0} in BrowserStack: {1}
BrowserStack.list.devices.fail=Unable to list supported devices for profile {0} in BrowserStack: {1}
BrowserStack.unknown.session=BrowserStack session id '{1}' for profile {0} is not recognized
BrowserStack.session.not.found=No session id found for profile {0} in BrowserStack.

PolyMatcher.notSupported.REGEX=PolyMatcher REGEX not supported for this locator: {0}
PolyMatcher.notSupported.NUMERIC=PolyMatcher NUMERIC not supported for this locator: {0}
PolyMatcher.notSupported.END=PolyMatcher END not supported for this locator: {0}
PolyMatcher.notSupported.END_ANY_CASE=PolyMatcher END_ANY_CASE not supported for this locator: {0}

Recorder.stop.prompt=Previous desktop recording available at {0}\n\
  Would you like to (P)lay it, (S)how it, (D)elete it?
Recorder.delete.notLocal=The video file is not currently located in local drive; delete CANCELLED
Recorder.open.notSupported=Unknown O/S; Nexial doesn't know how to open {0}

RepeatUntil.break=[repeat-until] loop terminating due to break-loop condition
RepeatUntil.conditionNotMet=[repeat-until] condition not met ({0}); loop proceeds
RepeatUntil.loop=<[repeat-until] entering loop #{0}

Skipped.nestedSectionStep=current step skipped due to the enclosing section command being skipped
Skipped.nestedSectionStep2=SKIPPED {nestedSectionStep}

SQS.no.credentials=Unable to resolve AWS credentials and/or AWS SQS settings.
SQS.receive.log=receiving from SQS queue '{0}'
SQS.receive.none=No message found in queue '{0}'
SQS.receive.found={1} message(s) found in queue '{0}'
SQS.receive.error=FAILED to receive message from queue '{0}': {1}
SQS.purge.log=purging SQS queue '{0}'
SQS.purge.none=No result found when purging queue '{0}'
SQS.purge.done=Purged messages from queue '{0}'
SQS.purge.error=FAILED to purge message from queue '{0}': {1}
SQS.send.fail=FAILED to send message successfully to queue '{0}'
SQS.send.done=Message successfully sent to queue '{0}': {1}
SQS.send.contentError=FAILED to send message to queue '{0}'; likely due to invalid characters in message body: {1}
SQS.send.error=FAILED to send messages to queue '{0}': {1}
SQS.delete.log=deleting from SQS queue '{0}'
SQS.delete.done=Message successfully deleted from queue '{0}'
SQS.delete.error=Message not deleted from queue '{0}': {1}

# test script updater
Tools.cli.target=[REQUIRED] Location of a single Excel test script or a directory to update.
Tools.cli.autocorrect=attempt to autocorrect duplicate activity names within a scenario

Tools.cli.plan_script=Note that the -plan and -script options are mutually exclusive; exactly one of them is required.
Tools.cli.script=[REQUIRED if -plan is missing]. The fully qualified path of the test script. {cli.plan_script}
Tools.cli.scenario=[optional] One or more comma-separated test scenarios to execute. This order-significant option \
  determines the order of the scenarios to execute. Note that this option is relevant only when a valid script is \
  specified via the -script option. When this option is omitted, all the scenarios found in the target script will be \
  executed, ordered from left to right.
Tools.cli.data=[optional] The fully qualified path of the data file for this execution. When omitted, Nexial will \
  default to a data file in the ../data directory with the same name of the target script.
Tools.cli.datasheets=[optional] Restricting to a comma-separated list of data sheets for this execution. When omitted, \
  Nexial will default to utilize all the data sheets of the specified/derived data file.
Tools.cli.output=[optional] The output directory where execution reports and artifacts will be stored. Default is \
  ../../output, relative to the specified test script.
Tools.cli.plan=[REQUIRED if -script is missing] The fully qualified path of a test plan (or plans). Multiple plans \
  can be specified using comma as separator. The use of this option will disable the other script-related options (\
  -script, -scenario, -data, -datasheets, -interactive). {cli.plan_script}
Tools.cli.subPlans=[optional] Comma separated list of the sub-plans (worksheets) of a test plan. This order-significant \
  option determines the order of the sub-plans to execute. Note that this option is permitted only for single plan \
  execution.
Tools.cli.override=[optional] Add or override data variables in the form of name=value. Multiple overrides are \
  supported via multiple -override name=value options. Note that variable name or value with spaces must be \
  enclosed in double quotes.
Tools.cli.interactive=[optional] Run Nexial in Interactive Mode. This option is not compatible with the -plan option.

Tools.cli.initComplete=input files and output directory resolved...
Tools.cli.missingRequired=[{0}] is a required argument and is missing

Tools.plan.noInteractive=Nexial Interactive is NOT supported with plan files. Try specifying a script instead.
Tools.plan.singleOnly=The -subplans option doesn't work with multiple test plans. Please try with single plan.
Tools.plan.execSubplans=Executing the following sub-plan(s) from {0}: {1}
Tools.plan.bad=specified test plan ({0}) is not readable or does not contain valid format.
Tools.plan.nonStd=Since the specified plan ({0}) does not follow standard project structure, related directories \
  could not be resolved from commandline arguments.
Tools.plan.row=ROW {0} of {1} in {2}
Tools.plan.badScript=Invalid/unreadable test script specified in {0}.
Tools.plan.noScript=Invalid test script specified in ROW {0} of {1}.
Tools.plan.noLoadTesting=Sorry... load testing mode not yet ready for use.
Tools.plan.parseError=Unable to successfully parse {0}: {1}
Tools.plan.subplansMissing=The plan {0} doesn't contain worksheet/s named {1}.
Tools.plan.badData=Unable to resolve data file for the test plan specified in {0}.
Tools.plan.dataNoReadable=Invalid/unreadable data file specified in ROW {0} of {1}. Data file not specified and cannot \
  be resolved by standard convention ({2}).
Tools.plan.dataNoReadable2=Invalid/unreadable data file specified in ROW {0} of {1}. The specified data file ({2}) \
  cannot be resolved to a valid data file..
Tools.plan.badData2=Invalid/unreadable data file specified in {0}.

Tools.script.missing=Invalid test script - {0}
Tools.script.noScenario=No valid scenario found in script {0}.
Tools.script.noScenario2=No scenario specified for execution.
Tools.script.bad=Unable to collect scenarios from {0}.
Tools.script.closeError=Unable to close Excel file ({0}): {1}.
Tools.script.nonStd=Specified test script ({0}) not following standard project structure, related directories would \
  not be resolved from commandline arguments.
Tools.script.noData=Unable to successfully resolve appropriate data file.

Tools.data.validating=validating data file as {0}
Tools.data.closeError=Unable to close data file ({0}): {1}
Tools.data.noScript=data file ({0}) cannot be resolved; test script not specified.
Tools.data.noScript2=data file cannot be resolved since test script is not specified.
Tools.data.bad=data file ({0}) is not readable via absolute or relative path.
Tools.data.noSheet=Unable to derive any valid data sheet to use.
Tools.data.notResolved=data file ({0}) is not readable via absolute or relative path. Relative path is based on \
  either the specified script or the resolved artifact directory.
Tools.data.badFormat=data file ({0}) does not contain valid data file format.
Tools.data.resolved=data file resolved as {0}

Tools.output.bad=output location cannot be resolved.
Tools.output.notDir=output location ({0}) cannot be accessed as a directory.

Tools.interactive.missingScript=Nexial Interactive requires 1 script to be specified via the -script option.

Tools.execution.noReport=Unable to generate the HTML report for this execution: {0}
Tools.execution.noReport2=Unable to cleanly execute tests; execution summary missing!
Tools.execution.report.fail=Unable to save execution summary due to {0}
Tools.execution.report.exported=HTML output for this execution exported to {0}
Tools.execution.junit.report=generated the JUnit report for this execution: {0}
Tools.execution.junit.fail=Unable to generate JUnit report for this execution: {0}
Tools.execution.junit.exported=JUnit XML output for this execution exported to {0}
Tools.execution.fail.suffix= Possibly the required argument is missing or invalid. Check usage details.

Tools.otc.not.ready=Nexial Cloud Integration not probably configured. See \
  https://nexiality.github.io/documentation/systemvars/index.html#nexial.outputToCloud for more details.

Tools.sms.config.missing=missing REQUIRED configuration; sms DISABLED!
Tools.sms.not.ready=sms not configured. See https://nexiality.github.io/documentation/commands/sms/index.html#setup \
  for setup details.
Tools.sms.text.missing=text cannot be empty
Tools.sms.text.bad=Resolved phone number is invalid since it has less than 10 digit: {0}

Tools.mail.skipped=skipped email notification as configured
Tools.mail.fail=Unable to send out notification email: {0}

Tools.target.bad=specified target - {0} is not accessible
Tools.target.isExcel=resolved target as a single Excel file {0}
Tools.target.isExcels=resolved target as a set of {0} Excel files
Tools.updateTemplate=\tscript updated to the latest template
Tools.updateCommands=\tupdated commands
Tools.activity.dupRenamed=\t[{0}]: duplicate activity name renamed from {1} to {2}
Tools.inspectedScript=\tcompleted script inspection
Tools.inspectedMacro=\tcompleted macro inspection
Tools.removeSystemSheet=\tremoving 'system' sheet for non-script file: {0}
Tools.deleteSystemSheet=\tdeleting sheet #{0} for {1}
Tools.notNexialScript=not recognized as nexial script: {0}
Tools.updateTestPlan=\tupdating test plan {0}
Tools.errorUpdatePlan=\tUNABLE TO UPDATE TEST PLAN {0} in {1}; CHECK TEST PLAN FOR ERRORS
Tools.error.parse=Unable to parse Excel file {0}: {1}
Tools.error.cmdTarget=\tInvalid command target:\t{0}
Tools.error.cmd=\tInvalid command:\t{0}
Tools.error.removedCommand=\
\t!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\
\t!!! [ERROR on ROW {0}] :\t{1}\n\
\t!!! - {2}\n\
\t!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n
Tools.warning.deprecated=\
\t************************************************************\n\
\t*** [WARNING on ROW {0}]:\t{1}\n\
\t*** - {2}\n\
\t************************************************************\n
Tools.error.paramMismatch=\tPossibly error on parameter(s) for {0}: expected {1} parameter(s) but found {2}
Tools.error.noParam=\tPossible error on parameter(s) for {0}: no value found for parameter '{1}'
Tools.error.noCICD=\n\nNexial Interactive is disabled unit testing or in CI/CD environment.
Tools.error.noValidOption=No valid option specified; Either -script or -plan option is required.

Temp.clean.before=cleaning up outdated temp files...
